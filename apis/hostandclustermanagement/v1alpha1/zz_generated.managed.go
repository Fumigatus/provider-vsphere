/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeCluster.
func (mg *VSphereComputeCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeClusterHostGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeClusterHostGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeClusterHostGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeClusterHostGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeClusterHostGroup.
func (mg *VSphereComputeClusterHostGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeClusterVmAffinityRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmAffinityRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeClusterVmAffinityRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmAffinityRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeClusterVmAffinityRule.
func (mg *VSphereComputeClusterVmAffinityRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeClusterVmAntiAffinityRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeClusterVmAntiAffinityRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeClusterVmAntiAffinityRule.
func (mg *VSphereComputeClusterVmAntiAffinityRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeClusterVmDependencyRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmDependencyRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeClusterVmDependencyRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmDependencyRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeClusterVmDependencyRule.
func (mg *VSphereComputeClusterVmDependencyRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeClusterVmGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeClusterVmGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeClusterVmGroup.
func (mg *VSphereComputeClusterVmGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereComputeClusterVmHostRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmHostRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereComputeClusterVmHostRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereComputeClusterVmHostRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereComputeClusterVmHostRule.
func (mg *VSphereComputeClusterVmHostRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereDpmHostOverride.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereDpmHostOverride) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereDpmHostOverride.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereDpmHostOverride) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereDpmHostOverride.
func (mg *VSphereDpmHostOverride) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereDrsVmOverride.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereDrsVmOverride) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereDrsVmOverride.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereDrsVmOverride) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereDrsVmOverride.
func (mg *VSphereDrsVmOverride) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereHaVmOverride.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereHaVmOverride) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereHaVmOverride.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereHaVmOverride) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereHaVmOverride.
func (mg *VSphereHaVmOverride) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereHost.
func (mg *VSphereHost) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereHost.
func (mg *VSphereHost) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereHost.
func (mg *VSphereHost) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereHost.
func (mg *VSphereHost) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereHost.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereHost) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereHost.
func (mg *VSphereHost) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereHost.
func (mg *VSphereHost) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereHost.
func (mg *VSphereHost) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereHost.
func (mg *VSphereHost) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereHost.
func (mg *VSphereHost) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereHost.
func (mg *VSphereHost) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereHost.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereHost) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereHost.
func (mg *VSphereHost) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereHost.
func (mg *VSphereHost) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereResourcePool.
func (mg *VSphereResourcePool) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereResourcePool.
func (mg *VSphereResourcePool) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereResourcePool.
func (mg *VSphereResourcePool) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereResourcePool.
func (mg *VSphereResourcePool) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereResourcePool.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereResourcePool) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereResourcePool.
func (mg *VSphereResourcePool) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereResourcePool.
func (mg *VSphereResourcePool) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereResourcePool.
func (mg *VSphereResourcePool) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereResourcePool.
func (mg *VSphereResourcePool) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereResourcePool.
func (mg *VSphereResourcePool) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereResourcePool.
func (mg *VSphereResourcePool) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereResourcePool.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereResourcePool) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereResourcePool.
func (mg *VSphereResourcePool) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereResourcePool.
func (mg *VSphereResourcePool) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VSphereVnic.
func (mg *VSphereVnic) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VSphereVnic.
func (mg *VSphereVnic) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this VSphereVnic.
func (mg *VSphereVnic) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this VSphereVnic.
func (mg *VSphereVnic) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VSphereVnic.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VSphereVnic) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VSphereVnic.
func (mg *VSphereVnic) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VSphereVnic.
func (mg *VSphereVnic) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VSphereVnic.
func (mg *VSphereVnic) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VSphereVnic.
func (mg *VSphereVnic) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this VSphereVnic.
func (mg *VSphereVnic) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this VSphereVnic.
func (mg *VSphereVnic) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VSphereVnic.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VSphereVnic) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VSphereVnic.
func (mg *VSphereVnic) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VSphereVnic.
func (mg *VSphereVnic) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
