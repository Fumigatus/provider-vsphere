/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VSphereStorageDrsVmOverrideObservation struct {

	// The managed object ID of the datastore cluster.
	DatastoreClusterID *string `json:"datastoreClusterId,omitempty" tf:"datastore_cluster_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Overrides any Storage DRS automation levels for this virtual machine.
	SdrsAutomationLevel *string `json:"sdrsAutomationLevel,omitempty" tf:"sdrs_automation_level,omitempty"`

	// Overrides the default Storage DRS setting for this virtual machine.
	SdrsEnabled *string `json:"sdrsEnabled,omitempty" tf:"sdrs_enabled,omitempty"`

	// Overrides the intra-VM affinity setting for this virtual machine.
	SdrsIntraVMAffinity *string `json:"sdrsIntraVmAffinity,omitempty" tf:"sdrs_intra_vm_affinity,omitempty"`

	// The managed object ID of the virtual machine.
	VirtualMachineID *string `json:"virtualMachineId,omitempty" tf:"virtual_machine_id,omitempty"`
}

type VSphereStorageDrsVmOverrideParameters struct {

	// The managed object ID of the datastore cluster.
	// +kubebuilder:validation:Optional
	DatastoreClusterID *string `json:"datastoreClusterId,omitempty" tf:"datastore_cluster_id,omitempty"`

	// Overrides any Storage DRS automation levels for this virtual machine.
	// +kubebuilder:validation:Optional
	SdrsAutomationLevel *string `json:"sdrsAutomationLevel,omitempty" tf:"sdrs_automation_level,omitempty"`

	// Overrides the default Storage DRS setting for this virtual machine.
	// +kubebuilder:validation:Optional
	SdrsEnabled *string `json:"sdrsEnabled,omitempty" tf:"sdrs_enabled,omitempty"`

	// Overrides the intra-VM affinity setting for this virtual machine.
	// +kubebuilder:validation:Optional
	SdrsIntraVMAffinity *string `json:"sdrsIntraVmAffinity,omitempty" tf:"sdrs_intra_vm_affinity,omitempty"`

	// The managed object ID of the virtual machine.
	// +kubebuilder:validation:Optional
	VirtualMachineID *string `json:"virtualMachineId,omitempty" tf:"virtual_machine_id,omitempty"`
}

// VSphereStorageDrsVmOverrideSpec defines the desired state of VSphereStorageDrsVmOverride
type VSphereStorageDrsVmOverrideSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VSphereStorageDrsVmOverrideParameters `json:"forProvider"`
}

// VSphereStorageDrsVmOverrideStatus defines the observed state of VSphereStorageDrsVmOverride.
type VSphereStorageDrsVmOverrideStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VSphereStorageDrsVmOverrideObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VSphereStorageDrsVmOverride is the Schema for the VSphereStorageDrsVmOverrides API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vsphere}
type VSphereStorageDrsVmOverride struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.datastoreClusterId)",message="datastoreClusterId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.virtualMachineId)",message="virtualMachineId is a required parameter"
	Spec   VSphereStorageDrsVmOverrideSpec   `json:"spec"`
	Status VSphereStorageDrsVmOverrideStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VSphereStorageDrsVmOverrideList contains a list of VSphereStorageDrsVmOverrides
type VSphereStorageDrsVmOverrideList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VSphereStorageDrsVmOverride `json:"items"`
}

// Repository type metadata.
var (
	VSphereStorageDrsVmOverride_Kind             = "VSphereStorageDrsVmOverride"
	VSphereStorageDrsVmOverride_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VSphereStorageDrsVmOverride_Kind}.String()
	VSphereStorageDrsVmOverride_KindAPIVersion   = VSphereStorageDrsVmOverride_Kind + "." + CRDGroupVersion.String()
	VSphereStorageDrsVmOverride_GroupVersionKind = CRDGroupVersion.WithKind(VSphereStorageDrsVmOverride_Kind)
)

func init() {
	SchemeBuilder.Register(&VSphereStorageDrsVmOverride{}, &VSphereStorageDrsVmOverrideList{})
}
